{"version":3,"sources":["webpack:///./src/pages/about.tsx"],"names":["QuoteContainer","styled","div","QuoteText","Paragraph","About","React","memo","useStaticQuery","bios","allGoogleSheetBiosRow","nodes","quotes","allGoogleSheetQuotesRow","useState","name","title","map","id","item","key","content","split","paragraph","index","url","isBold"],"mappings":"6FAAA,wGAuBMA,EAAiBC,IAAOC,IAAV,4EAAGD,CAAH,yBAIdE,EAAYF,YAAOG,KAAV,uEAAGH,CAAH,+EA4BTI,EAAQC,IAAMC,MAAK,WAAM,MAIzBC,yBAzBQ,cAuBsBC,EAFL,EAE3BC,sBAAyBC,MACSC,EAHP,EAG3BC,wBAA2BF,MAHA,EAaOG,mBAASL,EAAK,GAAGM,MAbxB,UAe7B,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,UACX,kBAAC,IAAD,cACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAP,OACR,kBAAC,IAAD,CAAKI,KAAMJ,EAAMK,IAAKF,GACnBH,OAINN,EAAKQ,KAAI,gBAAGI,EAAH,EAAGA,QAASH,EAAZ,EAAYA,GAAIH,EAAhB,EAAgBA,KAAhB,OACR,kBAAC,IAAD,CAAUI,KAAMJ,EAAMK,IAAKF,GACxBG,EAAQC,MAAM,MAAML,KAAI,SAACM,EAAWC,GAAZ,OACvB,kBAAC,IAAD,CAAWJ,IAAKI,GAAQD,YAMlC,kBAAC,IAAD,KACE,kBAAC,IAAD,eACCX,EAAOK,KAAI,gBAAGI,EAAH,EAAGA,QAASH,EAAZ,EAAYA,GAAIH,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MAAtB,EAA6BS,IAA7B,OACV,kBAACzB,EAAD,CAAgBoB,IAAKF,GACnB,kBAACf,EAAD,CAAWiB,IAAKF,GAAKG,GACrB,kBAAC,IAAD,CAAIK,QAAM,GACPX,EADH,KACWC,YASRX","file":"component---src-pages-about-tsx-c93aed5fb91f82227f7e.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Paragraph, MD, XXL } from \"@zendeskgarden/react-typography\"\nimport { Tabs, TabList, Tab, TabPanel } from \"@zendeskgarden/react-tabs\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport ContentContainer from \"../components/ContentContainer\"\nimport SEO from \"../components/seo\"\n\ninterface Bio {\n  readonly content: string\n  readonly id: string\n  readonly name: string\n}\n\ninterface Quote {\n  readonly content: string\n  readonly id: string\n  readonly name: string\n  readonly title: string\n  readonly url: string\n}\n\nconst QuoteContainer = styled.div`\n  margin-bottom: 16px;\n`\n\nconst QuoteText = styled(Paragraph)`\n  background-color: #e8e8e8;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: 8px;\n`\n\nconst query = graphql`\n  query BiosQuery {\n    allGoogleSheetBiosRow(sort: { fields: tabIndex }) {\n      nodes {\n        content\n        id\n        name\n      }\n    }\n    allGoogleSheetQuotesRow(sort: { fields: orderIndex }) {\n      nodes {\n        content\n        id\n        name\n        title\n        url\n      }\n    }\n  }\n`\n\nconst About = React.memo(() => {\n  const {\n    allGoogleSheetBiosRow: { nodes: bios },\n    allGoogleSheetQuotesRow: { nodes: quotes },\n  } = useStaticQuery<{\n    allGoogleSheetBiosRow: {\n      nodes: Array<Bio>\n    }\n    allGoogleSheetQuotesRow: {\n      nodes: Array<Quote>\n    }\n  }>(query)\n\n  const [currentBio, setCurrentBio] = useState(bios[0].name)\n\n  return (\n    <>\n      <ContentContainer>\n        <SEO title=\"About\" />\n        <XXL>About</XXL>\n        <Tabs>\n          <TabList>\n            {bios.map(({ id, name }) => (\n              <Tab item={name} key={id}>\n                {name}\n              </Tab>\n            ))}\n          </TabList>\n          {bios.map(({ content, id, name }) => (\n            <TabPanel item={name} key={id}>\n              {content.split(\"\\n\").map((paragraph, index) => (\n                <Paragraph key={index}>{paragraph}</Paragraph>\n              ))}\n            </TabPanel>\n          ))}\n        </Tabs>\n      </ContentContainer>\n      <ContentContainer>\n        <XXL>Quotes</XXL>\n        {quotes.map(({ content, id, name, title, url }) => (\n          <QuoteContainer key={id}>\n            <QuoteText key={id}>{content}</QuoteText>\n            <MD isBold>\n              {name}, {title}\n            </MD>\n          </QuoteContainer>\n        ))}\n      </ContentContainer>\n    </>\n  )\n})\n\nexport default About\n"],"sourceRoot":""}