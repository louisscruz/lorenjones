{"version":3,"sources":["webpack:///./src/templates/Album.tsx"],"names":["StyledMovementListItem","styled","li","AlbumTrack","React","memo","index","track","work","name","Albums","album","pageContext","descriptionParagraphs","useMemo","description","split","albumImageAltText","alt","imageFile","childImageSharp","fixed","map","paragraph","key","tracks","id"],"mappings":"4FAAA,gFAmBMA,EAAyBC,IAAOC,GAAV,oFAAGD,CAAH,6DAOtBE,EAAaC,IAAMC,MAAsB,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAC7C,kBAACP,EAAD,KACGM,EADH,KACYC,EAAMC,KAAKC,KACrB,kBAAC,IAAD,CAAkBF,MAAOA,QAIvBG,EAASN,IAAMC,MAAiB,YAAgC,IAAdM,EAAc,EAA7BC,YAAeD,MAChDE,EAAwBC,mBAAQ,kBAAMH,EAAMI,YAAYC,MAAM,QAAO,CACzEL,EAAMI,cAGFE,EAAoBH,mBAAQ,kBAASH,EAAMF,KAAf,iBAAmC,CAACE,IAEtE,OACE,kBAAC,IAAD,KACE,uCAAKO,IAAKD,GAAuBN,EAAMQ,UAAUC,gBAAgBC,QACjE,kBAAC,IAAD,KAAMV,EAAMF,MACXI,EAAsBS,KAAI,SAACC,EAAWjB,GAAZ,OACzB,kBAAC,IAAD,CAAWkB,IAAKlB,GAAQiB,MAE1B,kBAAC,IAAD,iBACA,4BACGZ,EAAMc,OAAOH,KAAI,SAACf,EAAOD,GAAR,OAChB,kBAACH,EAAD,CAAYqB,IAAKjB,EAAMmB,GAAIpB,MAAOA,EAAQ,EAAGC,MAAOA,YAO/CG","file":"component---src-templates-album-tsx-213f0a433732b04b8ff6.js","sourcesContent":["import React, { useMemo } from \"react\"\nimport { Paragraph, LG, XXL } from \"@zendeskgarden/react-typography\"\nimport styled from \"styled-components\"\n\nimport { Album, Immutable, Track } from \"../types\"\nimport ContentContainer from \"../components/ContentContainer\"\nimport LocalAudioPlayer from \"../components/LocalAudioPlayer\"\n\ntype AlbumTrackProps = Immutable<{\n  index: number\n  track: Track\n}>\n\ntype AlbumProps = Immutable<{\n  pageContext: {\n    album: Album\n  }\n}>\n\nconst StyledMovementListItem = styled.li`\n  align-items: center;\n  display: flex;\n  height: 32px;\n  margin: 4px;\n`\n\nconst AlbumTrack = React.memo<AlbumTrackProps>(({ index, track }) => (\n  <StyledMovementListItem>\n    {index}. {track.work.name}\n    <LocalAudioPlayer track={track} />\n  </StyledMovementListItem>\n))\n\nconst Albums = React.memo<AlbumProps>(({ pageContext: { album } }) => {\n  const descriptionParagraphs = useMemo(() => album.description.split(\"\\n\"), [\n    album.description,\n  ])\n\n  const albumImageAltText = useMemo(() => `${album.name} Album Cover`, [album])\n\n  return (\n    <ContentContainer>\n      <img alt={albumImageAltText} {...album.imageFile.childImageSharp.fixed} />\n      <XXL>{album.name}</XXL>\n      {descriptionParagraphs.map((paragraph, index) => (\n        <Paragraph key={index}>{paragraph}</Paragraph>\n      ))}\n      <LG>Excerpts</LG>\n      <ul>\n        {album.tracks.map((track, index) => (\n          <AlbumTrack key={track.id} index={index + 1} track={track} />\n        ))}\n      </ul>\n    </ContentContainer>\n  )\n})\n\nexport default Albums\n"],"sourceRoot":""}