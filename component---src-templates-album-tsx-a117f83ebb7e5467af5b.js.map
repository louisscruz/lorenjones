{"version":3,"sources":["webpack:///./src/components/LocalAudioPlayer.tsx","webpack:///./node_modules/@zendeskgarden/svg-icons/src/12/pause-fill.svg","webpack:///./src/templates/Album.tsx","webpack:///./node_modules/@zendeskgarden/svg-icons/src/12/play-fill.svg"],"names":["LocalAudioPlayer","React","memo","track","useGlobalAudioPlayer","currentTrack","isPlaying","moveToTrack","pause","play","isCurrentTrack","id","isCurrentTrackAndPlaying","handlePlayerClick","useCallback","onClick","size","PauseFill","props","createElement","defaultProps","module","exports","default","StyledAlbumImage","styled","img","StyledMovementListItem","li","AlbumTrack","index","work","name","Albums","album","pageContext","descriptionParagraphs","useMemo","description","split","albumImageAltText","alt","imageFile","childImageSharp","fixed","map","paragraph","key","tracks","PlayFill"],"mappings":"4FAAA,2FAYMA,EAAmBC,IAAMC,MAA4B,YAAe,IAAZC,EAAY,EAAZA,MAAY,EAOpEC,cALFC,EAFsE,EAEtEA,aACAC,EAHsE,EAGtEA,UACAC,EAJsE,EAItEA,YACAC,EALsE,EAKtEA,MACAC,EANsE,EAMtEA,KAGIC,GAAiBL,aAAA,EAAAA,EAAcM,MAAOR,EAAMQ,GAC5CC,EAA2BF,GAAkBJ,EAE7CO,EAAoBC,uBAAY,WAChCF,EACFJ,KACSE,GAGTH,EAAYJ,EAAMQ,IAFlBF,OAKD,CAACC,EAAgBE,EAA0BJ,EAAOC,EAAMN,EAAMQ,KAEjE,OACE,kBAAC,IAAD,CAAYI,QAASF,EAAmBG,KAAK,SAC1CJ,EAA2B,kBAAC,IAAD,MAAgB,kBAAC,IAAD,UAKnCZ,O,qBC1Cf,IAAIC,EAAQ,EAAQ,QAEpB,SAASgB,EAAWC,GAChB,OAAOjB,EAAMkB,cAAc,MAAMD,EAAMjB,EAAMkB,cAAc,IAAI,CAAC,KAAO,gBAAgB,CAAClB,EAAMkB,cAAc,OAAO,CAAC,MAAQ,IAAI,OAAS,KAAK,EAAI,IAAI,EAAI,IAAI,GAAK,IAAI,GAAK,IAAI,IAAM,IAAIlB,EAAMkB,cAAc,OAAO,CAAC,MAAQ,IAAI,OAAS,KAAK,EAAI,IAAI,EAAI,IAAI,GAAK,IAAI,GAAK,IAAI,IAAM,OAG5RF,EAAUG,aAAe,CAAC,MAAQ,KAAK,OAAS,KAAK,UAAY,QAAQ,QAAU,aAEnFC,EAAOC,QAAUL,EAEjBA,EAAUM,QAAUN,G,kCCVpB,gFAmBMO,EAAmBC,IAAOC,IAAV,8EAAGD,CAAH,kBAIhBE,EAAyBF,IAAOG,GAAV,oFAAGH,CAAH,6DAOtBI,EAAa5B,IAAMC,MAAsB,gBAAG4B,EAAH,EAAGA,MAAO3B,EAAV,EAAUA,MAAV,OAC7C,kBAACwB,EAAD,KACGG,EADH,KACY3B,EAAM4B,KAAKC,KACrB,kBAAC,IAAD,CAAkB7B,MAAOA,QAIvB8B,EAAShC,IAAMC,MAAiB,YAAgC,IAAdgC,EAAc,EAA7BC,YAAeD,MAChDE,EAAwBC,mBAAQ,kBAAMH,EAAMI,YAAYC,MAAM,QAAO,CACzEL,EAAMI,cAGFE,EAAoBH,mBAAQ,kBAASH,EAAMF,KAAf,iBAAmC,CAACE,IAEtE,OACE,kBAAC,IAAD,KACE,kBAACV,EAAD,eACEiB,IAAKD,GACDN,EAAMQ,UAAUC,gBAAgBC,QAEtC,kBAAC,IAAD,KAAMV,EAAMF,MACXI,EAAsBS,KAAI,SAACC,EAAWhB,GAAZ,OACzB,kBAAC,IAAD,CAAWiB,IAAKjB,GAAQgB,MAE1B,kBAAC,IAAD,iBACA,4BACGZ,EAAMc,OAAOH,KAAI,SAAC1C,EAAO2B,GAAR,OAChB,kBAACD,EAAD,CAAYkB,IAAK5C,EAAMQ,GAAImB,MAAOA,EAAQ,EAAG3B,MAAOA,YAO/C8B,a,qBChEf,IAAIhC,EAAQ,EAAQ,QAEpB,SAASgD,EAAU/B,GACf,OAAOjB,EAAMkB,cAAc,MAAMD,EAAMjB,EAAMkB,cAAc,OAAO,CAAC,KAAO,eAAe,EAAI,gJAGjG8B,EAAS7B,aAAe,CAAC,MAAQ,KAAK,OAAS,KAAK,UAAY,QAAQ,QAAU,aAElFC,EAAOC,QAAU2B,EAEjBA,EAAS1B,QAAU0B","file":"component---src-templates-album-tsx-a117f83ebb7e5467af5b.js","sourcesContent":["import React, { useCallback } from \"react\"\nimport { IconButton } from \"@zendeskgarden/react-buttons\"\nimport PlayIcon from \"@zendeskgarden/svg-icons/src/12/play-fill.svg\"\nimport PauseIcon from \"@zendeskgarden/svg-icons/src/12/pause-fill.svg\"\n\nimport { useGlobalAudioPlayer } from \"./GlobalAudioPlayer\"\nimport { Immutable, Track } from \"../types\"\n\ntype LocalAudioPlayerProps = Immutable<{\n  track: Track\n}>\n\nconst LocalAudioPlayer = React.memo<LocalAudioPlayerProps>(({ track }) => {\n  const {\n    currentTrack,\n    isPlaying,\n    moveToTrack,\n    pause,\n    play,\n  } = useGlobalAudioPlayer()\n\n  const isCurrentTrack = currentTrack?.id === track.id\n  const isCurrentTrackAndPlaying = isCurrentTrack && isPlaying\n\n  const handlePlayerClick = useCallback(() => {\n    if (isCurrentTrackAndPlaying) {\n      pause()\n    } else if (isCurrentTrack) {\n      play()\n    } else {\n      moveToTrack(track.id)\n      play()\n    }\n  }, [isCurrentTrack, isCurrentTrackAndPlaying, pause, play, track.id])\n\n  return (\n    <IconButton onClick={handlePlayerClick} size=\"small\">\n      {isCurrentTrackAndPlaying ? <PauseIcon /> : <PlayIcon />}\n    </IconButton>\n  )\n})\n\nexport default LocalAudioPlayer\n","var React = require('react');\n\nfunction PauseFill (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"fill\":\"currentColor\"},[React.createElement(\"rect\",{\"width\":\"3\",\"height\":\"10\",\"x\":\"2\",\"y\":\"1\",\"rx\":\"1\",\"ry\":\"1\",\"key\":0}),React.createElement(\"rect\",{\"width\":\"3\",\"height\":\"10\",\"x\":\"7\",\"y\":\"1\",\"rx\":\"1\",\"ry\":\"1\",\"key\":1})]));\n}\n\nPauseFill.defaultProps = {\"width\":\"12\",\"height\":\"12\",\"focusable\":\"false\",\"viewBox\":\"0 0 12 12\"};\n\nmodule.exports = PauseFill;\n\nPauseFill.default = PauseFill;\n","import React, { useMemo } from \"react\"\nimport { Paragraph, LG, XXL } from \"@zendeskgarden/react-typography\"\nimport styled from \"styled-components\"\n\nimport { Album, Immutable, Track } from \"../types\"\nimport ContentContainer from \"../components/ContentContainer\"\nimport LocalAudioPlayer from \"../components/LocalAudioPlayer\"\n\ntype AlbumTrackProps = Immutable<{\n  index: number\n  track: Track\n}>\n\ntype AlbumProps = Immutable<{\n  pageContext: {\n    album: Album\n  }\n}>\n\nconst StyledAlbumImage = styled.img`\n  height: auto;\n`\n\nconst StyledMovementListItem = styled.li`\n  align-items: center;\n  display: flex;\n  height: 32px;\n  margin: 4px;\n`\n\nconst AlbumTrack = React.memo<AlbumTrackProps>(({ index, track }) => (\n  <StyledMovementListItem>\n    {index}. {track.work.name}\n    <LocalAudioPlayer track={track} />\n  </StyledMovementListItem>\n))\n\nconst Albums = React.memo<AlbumProps>(({ pageContext: { album } }) => {\n  const descriptionParagraphs = useMemo(() => album.description.split(\"\\n\"), [\n    album.description,\n  ])\n\n  const albumImageAltText = useMemo(() => `${album.name} Album Cover`, [album])\n\n  return (\n    <ContentContainer>\n      <StyledAlbumImage\n        alt={albumImageAltText}\n        {...album.imageFile.childImageSharp.fixed}\n      />\n      <XXL>{album.name}</XXL>\n      {descriptionParagraphs.map((paragraph, index) => (\n        <Paragraph key={index}>{paragraph}</Paragraph>\n      ))}\n      <LG>Excerpts</LG>\n      <ul>\n        {album.tracks.map((track, index) => (\n          <AlbumTrack key={track.id} index={index + 1} track={track} />\n        ))}\n      </ul>\n    </ContentContainer>\n  )\n})\n\nexport default Albums\n","var React = require('react');\n\nfunction PlayFill (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fill\":\"currentColor\",\"d\":\"M4 11.79c-.13 0-.26-.03-.38-.08a.977.977 0 01-.62-.92V1.21A1 1 0 014.71.5l4.44 4.44c.58.58.58 1.54 0 2.12L4.71 11.5c-.19.19-.45.29-.71.29z\"}));\n}\n\nPlayFill.defaultProps = {\"width\":\"12\",\"height\":\"12\",\"focusable\":\"false\",\"viewBox\":\"0 0 12 12\"};\n\nmodule.exports = PlayFill;\n\nPlayFill.default = PlayFill;\n"],"sourceRoot":""}